.editorWrapper {
  width: 100%;
  max-width: 2560px;
  margin: 1rem auto;
  padding: 1rem;
  color: black;
  background-color: transparent; /* Light background for the editor */
  border-radius: 8px;
  box-shadow: 0 2px 10px rgba(253, 221, 221, 0.1);
  z-index: 1;
}

.headerImage {
  background-image: var(--bg-image);
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  height: 300px;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: left;
  color: red;
  font-size: 2rem;
  font-weight: bold;
  border-radius: 10px;
  margin-bottom: 20px;
  position: relative;
  padding: 1.5rem;
  margin: 1rem;
  z-index: 3;
}
.headerImage h1 {
  position: absolute;
  bottom: 20px;
  left: 20px;
  margin: 0;
}
.mainContainer {
  height: 100%;
}

.dragWrapper {
  display: flex;
  align-items: center;
}

.dragHandle {
  display: flex;
  justify-content: center;
  align-items: center;

  height: 1.5rem;
}

/* Ensure drag content takes available space */
.dragContent {
  flex-grow: 1;
  line-height: 1.5rem;
}

.mainContainer {
  width: 100%;
  color: black;
  padding: 3rem 2rem 2rem;
}

@media (min-width: 640px) {
  .mainContainer {
    margin-bottom: calc(20vh);
    border-radius: 0.5rem;
    border: 1px solid var(--muted-color);
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    padding: 1.5rem;
  }

  .editor {
    font-family: var(--font-default);
    max-width: 100%;
    outline: none;
    padding: 1rem;
  }

  .editor:focus {
    outline: none;
  }

  .link {
    color: var(--muted-foreground);
    text-decoration: underline;
    text-underline-offset: 3px;
    cursor: pointer;
    transition: color 0.2s;
  }

  .link:hover {
    color: var(--primary-color);
  }

  .divider {
    margin-top: 1rem;
    margin-bottom: 1.5rem;
    border-top: 1px solid var(--muted-foreground);
  }

  .taskList {
    list-style: none;
    padding-left: 0.5rem;
  }

  .taskItem {
    display: flex;
    gap: 0.5rem;
    align-items: flex-start;
    margin: 1rem 0;
  }

  /* Add these CSS variables to your :root or body */
  :root {
    --accent-color: #f4f4f5;
    --muted-foreground: #71717a;
    --background: #ffffff;
    --muted-color: #e4e4e7;
    --primary-color: #18181b;
    --font-default: system-ui, -apple-system, sans-serif;
  }

  /* Dark mode support */
  @media (prefers-color-scheme: dark) {
    :root {
      --accent-color: #27272a;
      --muted-foreground: #a1a1aa;
      --background: #18181b;
      --muted-color: #27272a;
      --primary-color: #fafafa;
    }
  }

  /* Prose styles for the editor */
  .editor h2 {
    font-size: 1.875rem;
    font-weight: 700;
    margin-bottom: 1rem;
  }

  .editor h3 {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
  }

  .editor p {
    margin-bottom: 1rem;
    line-height: 1.75;
  }

  .editor pre {
    background-color: var(--accent-color);
    padding: 1rem;
    border-radius: 0.5rem;
    margin: 1rem 0;
    overflow-x: auto;
  }

  .editor code {
    font-family: monospace;
  }

  /* For smaller screens */
  @media (max-width: 639px) {
    .editorWrapper {
      margin: 1rem auto;
      padding: 0 1rem;
    }

    .mainContainer {
      padding: 3rem 1.5rem 1.5rem;
    }
  }

  /* Drag handle styles */
  .dragWrapper {
    position: relative;
    display: flex;
    gap: 0.5rem;
    align-items: center;
    padding: 0.25rem;
  }

  .dragHandle {
    position: relative;
    width: 20px;
    height: 20px;
    opacity: 0;
    cursor: grab;
    transition: opacity 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--muted-foreground);
  }

  .dragWrapper:hover .dragHandle {
    opacity: 1;
  }

  .dragHandle:active {
    cursor: grabbing;
  }

  .dragContent {
    flex: 1;
    min-width: 0;
  }

  /* Dragging states */
  .dragWrapper.dragging {
    opacity: 0.5;
    background: var(--accent-color);
    border-radius: 0.25rem;
  }

  .dragWrapper.dragging .dragHandle {
    opacity: 1;
    cursor: grabbing;
  }

  /* Drag placeholder */
  .dragPlaceholder {
    height: 2px;
    background-color: var(--primary-color);

    border-radius: 1px;
    position: relative;
  }

  .dragPlaceholder::before {
    content: "";
    position: absolute;
    left: -4px;
    top: -3px;
    width: 8px;
    height: 8px;
    background-color: var(--primary-color);
    border-radius: 50%;
  }
}

.bubbleMenu {
  display: flex;
  gap: 0.5rem;
  background-color: #fff;
  padding: 0.5rem;
  border-radius: 0.5rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.bubbleMenu button {
  border: none;
  background: none;
  color: #0f172a;
  padding: 0.25rem;
  border-radius: 0.25rem;
  cursor: pointer;
}

.bubbleMenu button:hover {
  background-color: #f1f5f9;
}

.bubbleMenu button.isActive {
  color: #2563eb;
  background-color: #eff6ff;
}
.iconContainer {
  display: flex;
  align-items: center;
}

.addIcon {
  cursor: pointer;

  display: flex;
  align-items: center;
  opacity: 0;
  transition: opacity 0.2s ease;
}

.dragWrapper:hover .addIcon {
  opacity: 1;
}

.dragHandle {
  cursor: grab;
  display: flex;
  align-items: center;
}

.dragContent[contenteditable="true"] {
  min-height: 24px;
  padding: 8px;
  outline: none; /* Remove default outline */
  /* Add transparent border to prevent layout shift */
}

.dragContent[contenteditable="true"]:focus {
  border-radius: 4px;
}

/* Optional: Add a hover state */
.dragContent[contenteditable="true"]:hover {
  border-color: #e0e0e0;
}
